input {
    stdin { }

    file {
        path => "${PWD}/data/credits.csv"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
}
filter {
    csv {
        columns => [ "cast","crew","id" ]
        skip_header => true
    }

    mutate {
        gsub => [ "[cast]", ": None", ": nil" ]
    }
    ruby {
        code => '
            if event.include?("[cast]") and not event.get("[cast]").nil?
                event.set("[cast]", eval(event.get("[cast]")))
            end
        '
    }

    mutate {
        gsub => [ "[crew]", ": None", ": nil" ]
    }
    ruby {
        code => '
            if event.include?("[crew]") and not event.get("[crew]").nil?
                event.set("[crew]", eval(event.get("[crew]")))
            end
        '
    }

    mutate {
        convert => {
            "id" => "integer"
        }
    }

    mutate {
        remove_field => [ "message", "path", "host" ]
    }
}
output {
    stdout { codec => dots }

    #stdout { codec => rubydebug }

    elasticsearch {
        hosts => ["localhost:9200"]
        index => "movies"
        document_id => "%{id}"
        action => "update"
        doc_as_upsert => true
    }
}
