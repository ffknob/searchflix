input {
    file {
        path => "${PWD}/data/test.csv"
        start_position => "beginning"
        sincedb_path => "/dev/null"
    }
}
filter {
    if [message] =~ "^#" {
        drop { }
    }

    mutate {
        gsub => [
             # 'character': 'Jack ""Deuce"" Cooper' 
             # 'name': 'James ""J.R."" Russell'
             # 'character': 'Countess\' Advisor (segment ""Metzengerstein"")'
            "message", "\\'", '!::escaped-single-quote::!',
            "message", ': \'([\w\.\(\(\\\'\s]*)""([\w\s\.]*)""([\w\.\(\)\\\'\s]*)\'', ': ""\1!::double-quote::!\2!::double-quote::!\3""\4',
            "message", "{'", '{""',
            "message", "':", '"":',
            "message", ": '", ': ""',
            "message", "'}", '""}',
            "message", "', ", '"", ',
            "message", ", '", ', ""',
            "message", ": None", ": null"
        ]
    }

    csv {
        columns => [ "cast", "crew", "id" ]
        skip_header => true
    }

    mutate {
        gsub => [
            "cast", "!::escaped-single-quote::!", 'XXXX',
            "cast", "!::double-quote::!", '\"'
        ]
    }
    json {
        source => "cast"
        target => "cast"
    }

    mutate {
        gsub => [
            "crew", "!::escaped-single-quote::!", 'XXXX',
            "crew", "!::double-quote::!", '\"'
        ]
    }
    json {
        source => "crew"
        target => "crew"
    }

    #mutate {
    #    remove_field => [ "message", "path", "host" ]
    #}

}
output {
    stdout { codec => dots }

    stdout { codec => rubydebug }

    #elasticsearch {
    #    hosts => ["localhost:9200"]
    #    index => "movies"
    #    routing => "%{id}"
    #}
}